stages:
  - build
  - lint
  - deploy
  - update
  - cleanup

build_job:
  stage: build
  image: maven:3.8.7-eclipse-temurin-17
  script:
    - cd calculator-project
    - mvn package -B
    - ls -l target  # List the contents of the target directory
  artifacts:
    paths:
      - calculator-project/target/*.war

# Stage to check the formatting of Terraform files
terraform_fmt:
  stage: lint
  image:
    name: hashicorp/terraform:latest
    entrypoint: [""]
  script:
    - terraform --version  # Verify Terraform version
    - terraform fmt -check -recursive

# Stage to lint Terraform files with TFLint
tflint:
  stage: lint
  image:
    name: ghcr.io/terraform-linters/tflint:v0.51.1
    entrypoint: [""]
  script:
    - tflint --version  # Verify TFLint version
    - tflint --init
    - tflint

# Stage to deploy infrastructure using Terraform
deploy:
  stage: deploy
  image:
    name: hashicorp/terraform:latest
    entrypoint: [""]
  script:
    - terraform init
    - terraform validate
    - terraform plan -out=tfplan
    - terraform apply -auto-approve tfplan
  dependencies:
    - build_job
  variables:
    TF_IN_AUTOMATION: "true"
  artifacts:
    paths:
      - .terraform
      - tfplan
      - terraform.tfstate
      - .terraform.lock.hcl

# Update environment to deploy the war file on elastic beanstalk
update_environment:
  stage: update 
  image: 
    name: amazon/aws-cli:latest 
    entrypoint: [""]
  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region us-east-1
    - aws elasticbeanstalk update-environment --environment-name tanisha-app-env --version-label tanisha-app-v1
  dependencies:
    - deploy

# Stage to destroy the Terraform infrastructure
destroy:
  stage: cleanup
  image:
    name: hashicorp/terraform:latest
    entrypoint: [""]
  script:
    - terraform init
    - terraform destroy -auto-approve
  when: delayed
  start_in: 55 minutes
  variables:
    TF_IN_AUTOMATION: "true"
  dependencies:
    - deploy
  artifacts:
    paths:
      - terraform.tfstate
    when: always